/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import SqueezLogoImage from 'src/assets/images/ShopNavbar1_Squeez_logo.png';
import HamburgerImage from 'src/assets/images/ShopNavbar1_Hamburger.png';
import SearchImage from 'src/assets/images/ShopNavbar1_Search.png';
import BagImage from 'src/assets/images/ShopNavbar1_bag.png';
import { styled } from '@mui/material/styles';
import useShopNavbar1 from 'src/components/ShopNavbar1/useShopNavbar1';

const ScreenDesktopTypeQue = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ theme, data }) => ({
  backgroundColor: theme.palette['Background']['Background'],
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height:
    data.currentVariant === 'ScreenTabletTypeQuest'
      ? `50px`
      : data.currentVariant === 'ScreenMobileTypeQuest'
      ? `52px`
      : `60px`,
  justifyContent:
    data.currentVariant === 'ScreenTabletTypeQuest' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'ScreenTabletTypeQuest' ? `center` : `flex-start`,
  padding:
    data.currentVariant === 'ScreenTabletTypeQuest'
      ? `2px 20px`
      : data.currentVariant === 'ScreenMobileTypeQuest'
      ? `2px 20px`
      : `6px 80px`,
  boxSizing: `border-box`,
}));

const Items = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Logo = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const SqueezLogo = styled('img')({
  height: `48px`,
  width: `119.64px`,
  margin: `0px`,
});

const MenuStructure = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `36px`,
  margin: `0px`,
});

const Items1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'ScreenTabletTypeQuest' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `0px 0px 0px 40px`
      : `0px`,
}));

const Drinks = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ theme, data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `rgba(255, 255, 255, 1)`
      : theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Overline'].fontStyle,
  fontFamily: theme.typography['Typography']['Overline'].fontFamily,
  fontWeight: theme.typography['Typography']['Overline'].fontWeight,
  fontSize: theme.typography['Typography']['Overline'].fontSize,
  letterSpacing: theme.typography['Typography']['Overline'].letterSpacing,
  lineHeight: theme.typography['Typography']['Overline'].lineHeight,
  textDecoration: theme.typography['Typography']['Overline'].textDecoration,
  textTransform: theme.typography['Typography']['Overline'].textTransform,
  margin: `0px`,
}));

const Recipes = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ theme, data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `rgba(255, 255, 255, 1)`
      : theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Overline'].fontStyle,
  fontFamily: theme.typography['Typography']['Overline'].fontFamily,
  fontWeight: theme.typography['Typography']['Overline'].fontWeight,
  fontSize: theme.typography['Typography']['Overline'].fontSize,
  letterSpacing: theme.typography['Typography']['Overline'].letterSpacing,
  lineHeight: theme.typography['Typography']['Overline'].lineHeight,
  textDecoration: theme.typography['Typography']['Overline'].textDecoration,
  textTransform: theme.typography['Typography']['Overline'].textTransform,
  margin: `0px 0px 0px 40px`,
  opacity:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `0.6000000238418579`
      : 'unset',
}));

const About = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ theme, data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `rgba(255, 255, 255, 1)`
      : theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Overline'].fontStyle,
  fontFamily: theme.typography['Typography']['Overline'].fontFamily,
  fontWeight: theme.typography['Typography']['Overline'].fontWeight,
  fontSize: theme.typography['Typography']['Overline'].fontSize,
  letterSpacing: theme.typography['Typography']['Overline'].letterSpacing,
  lineHeight: theme.typography['Typography']['Overline'].lineHeight,
  textDecoration: theme.typography['Typography']['Overline'].textDecoration,
  textTransform: theme.typography['Typography']['Overline'].textTransform,
  margin: `0px 0px 0px 40px`,
  opacity:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `0.6000000238418579`
      : 'unset',
}));

const IconButton = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreenMobileTypeQuest'
      ? `0px`
      : `0px 0px 0px 40px`,
}));

const Container = styled('div')({
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconMenu2 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const Hamburger = styled('img')({
  height: `10px`,
  width: `14px`,
  position: `absolute`,
  left: `5px`,
  top: `7px`,
});

const Buttons = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconButton1 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Container1 = styled('div')({
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconSearch = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const Search = styled('img')({
  height: `15.26px`,
  width: `15.81px`,
  position: `absolute`,
  left: `4px`,
  top: `4px`,
});

const IconButton2 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 30px`,
});

const Container2 = styled('div')({
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const IconCart1 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `24px`,
  height: `24px`,
  margin: `0px`,
});

const Bag = styled('img')({
  height: `20px`,
  width: `17px`,
  position: `absolute`,
  left: `3px`,
  top: `2px`,
});

function ShopNavbar1(props) {
  const { data } = useShopNavbar1();

  return (
    <ScreenDesktopTypeQue className={props.className} data={data}>
      <Items>
        <Logo>
          <SqueezLogo
            src={SqueezLogoImage}
            loading="lazy"
            alt={'Squeez logo'}
          />
        </Logo>
        <MenuStructure>
          {!(data.currentVariant === 'ScreenMobileTypeQuest') && (
            <Items1 data={data}>
              <Drinks data={data}>{`DRINKS`}</Drinks>
              <Recipes data={data}>{`RECIPES`}</Recipes>
              <About data={data}>{`ABOUT`}</About>
            </Items1>
          )}
          {data.currentVariant === 'ScreenMobileTypeQuest' && (
            <IconButton data={data}>
              <Container>
                <IconMenu2>
                  <Hamburger
                    src={HamburgerImage}
                    loading="lazy"
                    alt={'Hamburger'}
                  />
                </IconMenu2>
              </Container>
            </IconButton>
          )}
        </MenuStructure>
        {!(data.currentVariant === 'ScreenMobileTypeQuest') && (
          <Buttons>
            <IconButton1>
              <Container1>
                <IconSearch>
                  <Search src={SearchImage} loading="lazy" alt={'Search'} />
                </IconSearch>
              </Container1>
            </IconButton1>
            <IconButton2>
              <Container2>
                <IconCart1>
                  <Bag src={BagImage} loading="lazy" alt={'bag'} />
                </IconCart1>
              </Container2>
            </IconButton2>
          </Buttons>
        )}
      </Items>
    </ScreenDesktopTypeQue>
  );
}

export default ShopNavbar1;
