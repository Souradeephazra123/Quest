/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { TextField, Button, Link as MUILink } from '@mui/material';
import { styled } from '@mui/material/styles';
import Image1Image from 'src/assets/images/placeholder.jpeg';

const Screenshot2023102101 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
  width: '100%',
});

const Section = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `14px 26px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Image1 = styled('div')({
  backgroundImage: `url(${Image1Image})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
});

const Article = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `11px 0px 0px 15px`,
});

const SignIn = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['H5'].fontStyle,
  fontFamily: theme.typography['Typography']['H5'].fontFamily,
  fontWeight: theme.typography['Typography']['H5'].fontWeight,
  fontSize: theme.typography['Typography']['H5'].fontSize,
  letterSpacing: theme.typography['Typography']['H5'].letterSpacing,
  lineHeight: theme.typography['Typography']['H5'].lineHeight,
  textDecoration: theme.typography['Typography']['H5'].textDecoration,
  textTransform: theme.typography['Typography']['H5'].textTransform,
  alignSelf: `start`,
  margin: `0px`,
}));

const TextFieldOutlined = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined1 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const DagreeT = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Subtitle 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 1'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 1'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 1'].textTransform,
  margin: `6px 0px 0px 0px`,
}));

const ButtonContained = styled(Button)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `15px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
}));

const Link1 = styled(MUILink)(({ theme }) => ({
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  alignSelf: `start`,
  margin: `6px 0px 0px 0px`,
}));

function Screenshot20231021012714(props) {
  return (
    <Screenshot2023102101 className={props.className}>
      <Section>
        <Image1></Image1>
        <Article>
          <SignIn>{`sign in`}</SignIn>
          <TextFieldOutlined disabled={false} size={'small'} label={'email'} />
          <TextFieldOutlined1
            disabled={false}
            size={'small'}
            label={'password'}
          />
          <DagreeT>{`Dagree to terms`}</DagreeT>
          <ButtonContained
            variant="contained"
            disabled={false}
            size={'large'}
            color={'primary'}
          >
            {'Sign in'}
          </ButtonContained>
          <Link1 href="#" underline="always">
            terms
          </Link1>
        </Article>
      </Section>
    </Screenshot2023102101>
  );
}

export default Screenshot20231021012714;
